plugins {
    id 'com.android.library'
    id 'maven-publish'
}

android {
    namespace 'es.icp.pistola'
    compileSdk 34

    defaultConfig {
        minSdk 28

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.6.1'

    //RFID - Zebra
    //implementation project(':RFIDAPI3Library')
    implementation 'com.github.icpmoviles:RFIDAPI3Library:1.0'
    //implementation project(':BarcodeScannerLibrary')
    implementation 'com.github.icpmoviles:BarcodeScannerLibrary:1.0'

    //Commons
    implementation 'com.github.icpmoviles:icp_commons:4.1.17'

    //Log de App
    implementation 'com.github.icpmoviles:icp_logs:1.0.0.2'
}

afterEvaluate {
    publishing{
        publications{
            maven(MavenPublication){
                groupId 'com.github.icpmoviles'
                artifactId 'rfid_library'
                version '1.0.0'
                from components.release

//                pom.withXml {
//                    def dependenciesNode = asNode().appendNode("dependencies")
//                    configurations.api.allDependencies.each { dependency ->
//                        def dependencyNode = dependenciesNode.appendNode("dependency")
//                        dependencyNode.appendNode("groupId", dependency.group)
//                        dependencyNode.appendNode("artifactId", dependency.name)
//                        dependencyNode.appendNode("version", dependency.version)
//                    }
//                }
            }
        }
    }
}
